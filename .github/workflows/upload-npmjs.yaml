name: Upload to npmjs.com

on:
  push:
    tags:
      - 'v*'

jobs:
  build-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        targets:
          - 'x86_64-apple-darwin'
          - 'aarch64-apple-darwin'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Add target to a Rust toolchain
        run: rustup target add ${{ matrix.targets }}
      - name: Install Zig & cargo-zigbuild
        run: |
          brew install zig
          cargo install cargo-zigbuild
      - name: Install dependencies
        run: npm install
      - name: Build NodeAPI Plugin
        run: npm run build:production -- --target ${{ matrix.targets }}
      - run: ls
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binding-${{ matrix.targets }}
          path: japanese-address-parser.*.node
          if-no-files-found: error

  build-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targets:
          - 'x86_64-unknown-linux-gnu'
          - 'aarch64-linux-android'
          - 'armv7-linux-androideabi'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Add target to a Rust toolchain
        run: rustup target add ${{ matrix.targets }}
      - name: Install aarch64-linux-gnu-gcc
        if: ${{ matrix.targets == 'aarch64-linux-android' }}
        run: |
          sudo apt-get update
          sudo apt-get install g++-aarch64-linux-gnu
      - name: Install Zig & cargo-zigbuild
        run: pip3 install ziglang cargo-zigbuild
      - name: Install dependencies
        run: npm install
      - name: Build NodeAPI Plugin
        run: npm run build:production -- --target ${{ matrix.targets }}
      - run: ls
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: binding-${{ matrix.targets }}
          path: japanese-address-parser.*.node
          if-no-files-found: error

  publish:
    name: Upload to npmjs.com
    runs-on: ubuntu-latest
    needs:
      - build-macos
      - build-linux
    permissions:
      contents: read
      id-token: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
          scope: '@toriyama'
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          pattern: binding-*
          merge-multiple: true
      - run: ls -l dist
      - name: Publish
        run: npm publish --provenance --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
